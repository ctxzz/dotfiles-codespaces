# ~/.tmux.conf: tmux設定ファイル
# GitHub Codespaces用のtmux設定

# ============================================================================
# 基本設定
# ============================================================================

# プレフィックスキーをCtrl+aに変更（Ctrl+bの代わり）
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# 設定ファイルのリロード
bind r source-file ~/.tmux.conf \; display "設定ファイルをリロードしました！"

# エスケープタイムの短縮
set -sg escape-time 0

# 履歴の上限
set -g history-limit 10000

# ウィンドウとペインの番号を1から開始
set -g base-index 1
setw -g pane-base-index 1

# ウィンドウ番号を自動で詰める
set -g renumber-windows on

# マウス操作を有効化
set -g mouse on

# ============================================================================
# カラー設定
# ============================================================================

# 256色対応
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# ============================================================================
# ステータスバー設定
# ============================================================================

# ステータスバーの位置
set -g status-position bottom

# ステータスバーの更新間隔（秒）
set -g status-interval 5

# ステータスバーの左右の長さ
set -g status-left-length 30
set -g status-right-length 60

# ステータスバーの配色
set -g status-style bg=colour234,fg=colour137

# ステータスバー左側の表示
set -g status-left '#[fg=colour233,bg=colour245,bold] ❐ #S #[fg=colour245,bg=colour234,nobold]'

# ステータスバー右側の表示
set -g status-right '#[fg=colour233,bg=colour241,bold] %Y/%m/%d(%a) #[fg=colour233,bg=colour245,bold] %H:%M:%S '

# ウィンドウリストの配色
setw -g window-status-style fg=colour138,bg=colour235
setw -g window-status-format ' #I:#W#F '

# アクティブなウィンドウの配色
setw -g window-status-current-style fg=colour81,bg=colour238,bold
setw -g window-status-current-format ' #I:#W#F '

# ベルがあったウィンドウの配色
setw -g window-status-bell-style fg=colour255,bg=colour1,bold

# ============================================================================
# ペイン設定
# ============================================================================

# ペインの分割（より直感的なキーバインド）
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# ペイン間の移動（Vimスタイル）
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ペインのリサイズ
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# ペインの境界線の配色
set -g pane-border-style fg=colour238
set -g pane-active-border-style fg=colour51

# ペイン番号の表示時間（ミリ秒）
set -g display-panes-time 2000

# ============================================================================
# ウィンドウ設定
# ============================================================================

# 新しいウィンドウを現在のディレクトリで開く
bind c new-window -c "#{pane_current_path}"

# ウィンドウの移動
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# ウィンドウの順序入れ替え
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# ============================================================================
# コピーモード設定
# ============================================================================

# コピーモードのキーバインドをViスタイルに
setw -g mode-keys vi

# コピーモードの開始
bind v copy-mode

# コピーモードでの選択とコピー（Viスタイル）
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle

# ペーストバッファの内容を貼り付け
bind p paste-buffer

# ============================================================================
# セッション管理
# ============================================================================

# セッションツリーを表示
bind w choose-tree -Zs

# セッションの切り替え
bind S command-prompt -p "セッション名:" "switch-client -t '%%'"

# セッションの削除
bind X confirm-before -p "セッション #S を削除しますか? (y/n)" kill-session

# ============================================================================
# その他の便利なキーバインド
# ============================================================================

# ペインの同期切り替え（全ペインに同じ入力を送る）
bind s setw synchronize-panes \; display "ペイン同期: #{?synchronize-panes,ON,OFF}"

# ペインを新しいウィンドウに移動
bind b break-pane -d

# ペインのズーム切り替え
bind z resize-pane -Z

# 現在のペインのパスをクリップボードにコピー
bind P run-shell "tmux display-message -p '#{pane_current_path}' | xclip -selection clipboard"

# ============================================================================
# プラグイン設定（TPM: Tmux Plugin Managerを使用する場合）
# ============================================================================

# TPMのインストールパス
set -g @plugin 'tmux-plugins/tpm'

# 便利なプラグイン
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'  # セッション復元
# set -g @plugin 'tmux-plugins/tmux-continuum'  # 自動保存
# set -g @plugin 'tmux-plugins/tmux-yank'       # クリップボード連携

# Resurrectの設定
# set -g @resurrect-strategy-vim 'session'
# set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-capture-pane-contents 'on'

# Continuumの設定
# set -g @continuum-restore 'on'
# set -g @continuum-boot 'on'

# TPMの初期化（この行は最後に置く）
# run '~/.tmux/plugins/tpm/tpm'

# ============================================================================
# Codespaces固有の設定
# ============================================================================

# Codespacesでの最適化
if-shell '[ -n "$CODESPACES" ]' \
    'set -g status-right "#[fg=colour233,bg=colour241,bold] Codespace: $CODESPACE_NAME #[fg=colour233,bg=colour245,bold] %H:%M:%S "'

# ============================================================================
# メモ
# ============================================================================
#
# 基本的なtmuxコマンド:
# - tmux new -s セッション名     # 新しいセッションを作成
# - tmux ls                      # セッション一覧を表示
# - tmux attach -t セッション名  # セッションにアタッチ
# - tmux kill-session -t セッション名  # セッションを削除
#
# プレフィックス（Ctrl+a）後のコマンド:
# - | または -        # ペインを分割
# - h,j,k,l          # ペイン間を移動
# - c                # 新しいウィンドウを作成
# - n                # 次のウィンドウに移動
# - p                # 前のウィンドウに移動
# - d                # セッションからデタッチ
# - [                # コピーモードに入る
# - ]                # ペースト
# - ?                # キーバインド一覧を表示
# - :                # コマンドプロンプトを開く
#
# ============================================================================
